@import './fontImport.scss';
$breakpoint: calc(1000rem / 16);
body {
  --primaryColor: #0eacc6;
  --primaryColorLighter: #{lighten(#0eacc6, 5%)};
  --lightColor: #fcfcfc;
  --secondaryColor: #a3cf55;
  --darkColor: #1b1b1f;
  --darkColorTransparent: #1b1b1f9d;
  --borderColor: #dddddd;
  --lightCreamColor: #faf9fe;
  --fontFactor: 1;
  --sectionGap: 4rem;
  font-size: calc(1rem * var(--fontFactor));
  --textColor: inherit;
  --backgroundColor: inherit;
  --ratingStar: #fd7e14;
  --dangerRed: #f70000;
  font-family: 'Plus Jakarta Sans', system-ui, -apple-system, 'Segoe UI', Roboto,
    'Helvetica Neue', 'Noto Sans', 'Liberation Sans', Arial, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  max-width: 100vw;
  overflow-x: hidden;

  &[dark] {
    --textColor: var(--lightColor);
    --backgroundColor: var(--darkColor);
    --borderColor: var(--lightColor);
  }
  &[dyslexic] {
    font-family: OpenDyslexic;
  }

  @media (max-width: $breakpoint) {
    --fontFactor: 0.8;
  }
}
* {
  margin: 0;
  padding: 0;
  color: var(--textColor);
  background-color: var(--backgroundColor);
}
p {
  line-height: 1.65;
}
section:not(:is(:first-of-type, :last-of-type)) {
  margin-block: var(--sectionGap);
}
.mainGrid {
  --containerWidth: 1300px;
  --inlineGap: 1em;
  display: grid;
  grid-template-columns:
    [fullWidth-start]
    minmax(var(--inlineGap), 100%) [container-start] min(
      (100% - var(--inlineGap) * 2),
      var(--containerWidth)
    )
    [container-end] minmax(var(--inlineGap), 100%) [fullWidth-end];
}

.container {
  grid-column: container;
}
.fullWidth {
  grid-column: fullWidth;
}

header .container {
  display: flex;
  flex-wrap: wrap;
  align-items: end;
  gap: 1em;
  margin-block: 0.5rem;
}
header .container:has(.header-contact-wrapper) {
  justify-content: space-between;
  align-items: center;
}
.accessibilities {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
  @media screen and (max-width: $breakpoint) {
    span {
      width: 100%;
    }
  }
}

.btn {
  text-transform: capitalize;
  letter-spacing: -0.011rem;
  font-weight: 600;
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  cursor: pointer;
  text-decoration: none;
}

.btn-lg {
  font-size: calc(1.125rem * var(--fontFactor));
  padding: 0.675rem 1.375rem;
}

.btn-pill,
.rounded-pill {
  border-radius: 200vmax;
}

.btn-primary {
  color: var(--primaryColor);
  border: 1px solid var(--primaryColor);
  transition: color 300ms, background-color 300ms;

  &:hover {
    color: var(--lightColor);
    background-color: var(--primaryColor);
  }

  &.btn-fill {
    background-color: var(--primaryColor);
    color: var(--lightColor);

    &:hover {
      background-color: var(--primaryColorLighter);
    }
  }

  &.btn-transparent {
    background-color: transparent;
    border-color: transparent;
    color: var(--primaryColor);

    &:hover {
      color: var(--primaryColorLighter);
    }
  }

  [dark] & {
    border-color: var(--lightColor);
    color: var(--lightColor);
    background-color: var(--darkColor);

    &:hover {
      outline: 1px solid var(--lightColor);
    }

    &.btn-fill {
      background-color: var(--darkColor);

      &:hover {
        outline: 1px solid var(--lightColor);
      }
    }

    &.btn-transparent {
      background-color: transparent;
      border-color: transparent;
      color: var(--lightColor);
      &:hover {
        outline: 1px solid var(--lightColor);
      }
    }
  }
}

.header-contact-wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 2rem;
  margin-inline-start: auto;
  justify-content: start;
  .header-contact {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    --_col: var(--primaryColor);
    i {
      width: 1.28571429em;
      text-align: center;
      font-size: 2em;
      color: var(--_col);
      border: 1px solid var(--_col);
      padding: 0.2em;
      border-radius: 0.375rem;
    }
    h4 {
      color: var(--_col);
    }
    [dark] & {
      --_col: var(--lightColor);
    }
  }
  @media screen and (max-width: $breakpoint) {
    display: none;
  }
}

a:not(:hover) {
  text-decoration: none;
}
.container:has(.navbar-nav) {
  align-items: center;
}
.navbar-nav {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  list-style-type: none;
  .nav-item {
    .menuWrapper {
      // display: grid;
      z-index: 1;
      opacity: 0;
      transition: opacity 300ms;
      pointer-events: none;
    }
    &:hover {
      .menuWrapper {
        opacity: 1;
        pointer-events: initial;
      }
    }
    div:has(> .dropdown-menu) {
      position: relative;
      // overflow: hidden;
      background-color: var(--lightColor);
      z-index: 1;
    }
    .dropdown-menu {
      --_padding: 1rem;
      list-style: none;
      z-index: 1;
      position: absolute;
      padding: var(--_padding);
      min-width: calc(200px + var(--_padding) * 2);
      display: grid;
      gap: 0.35rem;
      transform: translateX(calc(-1 * var(--_padding)));
    }
  }
}
body:not([dark]) .dropdown-menu {
  background-color: var(--lightColor);
}

.hero-section {
  .jarallax-img {
    opacity: 0.5;
  }
  [dark] & {
    background: var(--darkColor) !important;
    .jarallax-img {
      display: none;
    }
  }
}
.heroContent {
  height: 75vh;
  display: grid;
  align-items: center;
  justify-content: flex-start;
  text-align: left; /* Applied on larger screens */
  grid-template-columns: 6fr 5fr;
  @media screen and (max-width: $breakpoint) {
    grid-template-columns: 1fr;
  }
  img {
    width: 100%;
    height: auto;
    max-height: 70vh;
    object-fit: cover;
    object-position: top;
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
    @media (max-width: $breakpoint) {
      display: none;
    }
  }
  > div:nth-child(1) {
    @media (min-width: 1200px) {
      max-width: 70ch;
    }
  }
}

@media (max-width: 992px) {
  .heroContent {
    text-align: center; /* Applied on smaller screens */
  }
}

$spacer: 0.25rem; // Base unit for spacing (1rem = 16px, can be adjusted)
$sizes: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9; // List of sizes (0 to 9)
$directions: '', 't', 'r', 'b', 'l', 'x', 'y'; // Directions for margin, padding, gap

// Margin Classes
@each $size in $sizes {
  @each $direction in $directions {
    $value: if(
      $size == 0,
      0,
      $spacer * $size
    ); // Calculate size based on base unit

    // Generate margin classes
    .m#{$direction}-#{$size} {
      @if $direction == 't' {
        margin-top: $value;
      } @else if $direction == 'r' {
        margin-right: $value;
      } @else if $direction == 'b' {
        margin-bottom: $value;
      } @else if $direction == 'l' {
        margin-left: $value;
      } @else if $direction == 'x' {
        margin-left: $value;
        margin-right: $value;
      } @else if $direction == 'y' {
        margin-top: $value;
        margin-bottom: $value;
      } @else {
        margin: $value;
      }
    }
  }
}
.mx-auto {
  margin-inline: auto;
}
// Padding Classes
@each $size in $sizes {
  @each $direction in $directions {
    $value: if(
      $size == 0,
      0,
      $spacer * $size
    ); // Calculate size based on base unit

    // Generate padding classes
    .p#{$direction}-#{$size} {
      @if $direction == 't' {
        padding-top: $value;
      } @else if $direction == 'r' {
        padding-right: $value;
      } @else if $direction == 'b' {
        padding-bottom: $value;
      } @else if $direction == 'l' {
        padding-left: $value;
      } @else if $direction == 'x' {
        padding-left: $value;
        padding-right: $value;
      } @else if $direction == 'y' {
        padding-top: $value;
        padding-bottom: $value;
      } @else {
        padding: $value;
      }
    }
  }
}

// Gap Classes (for flexbox and grid gaps)
@each $size in $sizes {
  $value: if(
    $size == 0,
    0,
    $spacer * $size
  ); // Calculate size based on base unit

  .gap-#{$size} {
    gap: $value;
  }

  .row-gap-#{$size} {
    row-gap: $value;
  }

  .col-gap-#{$size} {
    column-gap: $value;
  }
}

.d-flex {
  display: flex;
  flex-wrap: wrap;
}
.d-grid {
  display: grid;
}
.d-block {
  display: block;
}
.d-inline-block {
  display: inline-block;
}

.text-primary {
  color: var(--primaryColor);

  [dark] & {
    color: var(--lightColor);
  }
}
.h6,
h6 {
  font-size: calc(1rem * var(--fontFactor));
}
.h5,
h5 {
  font-size: calc(1.25rem * var(--fontFactor));
}
.h4,
h4 {
  font-size: calc((1.275rem + 0.3vw) * var(--fontFactor));
}
.display-2 {
  font-size: calc(clamp(1.25rem, 1.25rem + 3vw, 4rem) * var(--fontFactor));
}
.display-3 {
  font-size: calc(
    clamp(1.4rem, calc(1.475rem + 2.7vw), 3.5rem) * var(--fontFactor)
  );
  font-weight: 800;
  line-height: 1.2;
}
.display-4 {
  font-size: calc(
    clamp(1.425rem, calc(1.425rem + 2.1vw), 3rem) * var(--fontFactor)
  );
  font-weight: 800;
  line-height: 1.2;
}
.display-5 {
  font-size: calc(
    clamp(1.4rem, calc(1.4rem + 1.8vw), 2.75rem) * var(--fontFactor)
  );
  font-weight: 800;
  line-height: 1.2;
}
.lead {
  font-size: calc(1.25rem * var(--fontFactor));
  font-weight: 400;
}
@media (min-width: 1200px) {
  .offset-xl-1 {
    margin-left: 8.33333333%;
  }
}

body:not([dark]) .hero-section .rating .rate-icon :is(i, i::before) {
  color: var(--ratingStar);
}
.hero-section .rating .rate-icon :is(i, i::before) {
  width: 15px;
}

.hero-section .rating h4 {
  font-size: calc((20rem / 16) * var(--fontFactor));
  font-weight: 800;
}

.hero-section .rating .rated {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-top: 0.5rem;
}

.bg-pattern {
  background-image: radial-gradient(
    circle,
    currentColor 1px,
    rgba(0, 0, 0, 0) 1px
  );
  background-size: 1rem 1rem;
}
.text-danger {
  color: var(--dangerRed);
}

.aboutGrid {
  display: grid;
  grid-template-columns: 4fr 5fr;
  gap: 2rem;
  place-items: center;
  @media screen and (max-width: $breakpoint) {
    grid-template-columns: 1fr;
  }
}

.fw-bold {
  font-weight: 700;
}
.fw-300 {
  font-weight: 300;
}

.rounded-2 {
  border-radius: 0.375rem;
}
.rounded-4 {
  border-radius: 1rem;
}
.overflow-hidden {
  overflow: hidden;
}
.form-control {
  box-sizing: border-box;
  display: block;
  width: 100%;
  padding: 0.475rem 1rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.65;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #e4e5e7;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-radius: 0.375rem;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  [dark] & {
    background-color: var(--darkColor);
  }
}
label {
  display: block;
}
.bg-primary {
  background-color: var(--primaryColor);
  [dark] & {
    background-color: var(--darkColor);
  }
}
body:not([dark]) .bg-light {
  background-color: #faf9fe;
}
.text-white {
  color: var(--lightColor);
}

.h3,
.h4,
.h5,
.h6,
h3,
h4,
h5,
h6 {
  letter-spacing: 0.005rem;
  font-weight: 600;
}

.fw-bolder {
  font-weight: 800 !important;
}
.text-muted {
  color: var(--darkColorTransparent);
  [dark] & {
    color: var(--lightColor);
  }
}
.dashBefore {
  padding-inline-start: 3rem;
  position: relative;
  &:before {
    width: 2rem;
    height: 0.125rem;
    position: absolute;
    inset-inline-start: 0;
    inset-block: 0;
    margin-block: auto;
    content: '';
    background-color: var(--primaryColor);
    [dark] & {
      background-color: var(--lightColor);
    }
  }
}
.video-container {
  position: relative;
  display: grid;
  place-items: center;
  overflow: hidden;
  margin: 0 auto;
  background: #ccc;
  width: 100%;
  height: 400px;
  cursor: pointer;
  /* padding-top: calc(100%*(370 / 658)); */
}

.video-container video {
  /* position: absolute;
  z-index: 0;
  object-fit: cover;
  width: 100%;
  top: 0;
  left: 0; */
}

.video-cover {
  z-index: 1;
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
}

.video-container .video-cover img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.video-container .video-cover .video-play {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  content: '';
  z-index: 2;
  background-image: url('data:image/svg+xml;utf8,<svg width="53" height="56" viewBox="0 0 53 56" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M26.4993 53.6667C39.6621 53.6667 50.3327 42.1754 50.3327 28.0001C50.3327 13.8248 39.6621 2.3334 26.4993 2.3334C13.3366 2.3334 2.66602 13.8248 2.66602 28.0001C2.66602 42.1754 13.3366 53.6667 26.4993 53.6667Z" fill="%23FFCD27"/><path fill-rule="evenodd" clip-rule="evenodd" d="M0.5 28C0.5 12.536 12.1406 0 26.5 0C40.8594 0 52.5 12.536 52.5 28C52.5 43.464 40.8594 56 26.5 56C12.1406 56 0.5 43.464 0.5 28ZM26.5 4.66667C14.5338 4.66667 4.83333 15.1133 4.83333 28C4.83333 40.8867 14.5338 51.3333 26.5 51.3333C38.4662 51.3333 48.1667 40.8867 48.1667 28C48.1667 15.1133 38.4662 4.66667 26.5 4.66667Z" fill="%23030104"/><path fill-rule="evenodd" clip-rule="evenodd" d="M20.2152 16.2796C20.8855 15.8628 21.7115 15.8628 22.3818 16.2796L37.9818 25.9791C38.6522 26.3959 39.0652 27.1662 39.0652 27.9999C39.0652 28.8335 38.6522 29.6038 37.9818 30.0206L22.3818 39.7201C21.7115 40.1369 20.8855 40.1369 20.2152 39.7201C19.5448 39.3032 19.1318 38.533 19.1318 37.6993V18.3004C19.1318 17.4668 19.5448 16.6965 20.2152 16.2796ZM23.4652 22.3418V33.6579L32.5652 27.9999L23.4652 22.3418Z" fill="%23030104"/></svg>');
  background-repeat: no-repeat;
  background-position: center;
  display: block;
  pointer-events: none;
}

.image-height {
  height: 277px;
  width: 100%;
  object-fit: cover;
}

.bookingGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;
  place-items: center;
  @media screen and (max-width: $breakpoint) {
    grid-template-columns: 1fr;
  }
  .featureGrid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
    box-sizing: border-box;
    // > div,
    // > div > div {
    //   box-sizing: border-box;
    //   height: 100%;
    // }
    @media screen and (max-width: $breakpoint) {
      grid-template-columns: 1fr;
    }
    .card {
      background-color: #fff;
      border: 1px solid var(--lightColor);
      i,
      i::before {
        position: absolute;
        inset: 0;
        margin: auto;
        display: grid;
        place-content: center;
      }
      [dark] & {
        background-color: var(--darkColor);
      }
    }
  }
}
.position-relative {
  position: relative;
}
.width-6x {
  width: 3.5rem;
}
.height-6x {
  height: 3.5rem;
}
.w-100 {
  width: 100%;
}
.h-100.h-100 {
  height: 100%;
}
.fs-2 {
  font-size: calc((1.325rem + 0.9vw) * var(--fontFactor));
}
.fs-5 {
  font-size: calc(1.25rem * var(--fontFactor));
}
.fw-semibold {
  font-weight: 600;
}
section.bg-light {
  padding-block: var(--sectionGap);
}
.rounded-top-end-0 {
  border-top-right-radius: 0;
}
.rounded-bottom-start-0 {
  border-bottom-left-radius: 0;
}
.hover-lift,
.hover-lift-lg {
  will-change: transform;
  transition: all 0.3s ease-in-out;
}
.hover-lift:hover {
  transform: translate(0, -5px);
}
.hover-shadow-xl:hover {
  box-shadow: 0 2rem 4rem rgba(13, 9, 30, 0.175);
  [dark] & {
    box-shadow: 0 2rem 4rem rgba(85, 83, 95, 0.175);
  }
}
.play-btn {
  position: absolute;
  margin: 0;
  transform: translate (-50%, -50%);
  inset: 0 !important;
  background-color: transparent;
  &::before {
    background: var(--lightColor);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    margin: 0;
    content: '';
    border-radius: 50%;
    position: absolute;
    // inset: 0;
    // margin: auto;
    width: 5rem;
    height: 5rem;
    // place-self: center;
  }
  i {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    margin: 0;
    background: transparent;
    [dark] & {
      color: var(--darkColor);
    }
    &::before {
      background: transparent;
    }
  }
}
.text-center {
  text-align: center;
}
.char-60 {
  max-width: 60ch;
}

.expertiseGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(410px, 1fr));
  gap: 2rem;
  @media (max-width: 410px) {
    grid-template-columns: 1fr;
  }
  > * {
    max-width: calc(100vw - var(--inlineGap, 1rem) * 2);
  }
  img {
    width: 100%;
    height: auto;
    aspect-ratio: 3/2;
    object-fit: cover;
  }
}
.swiperArrowContainer {
  justify-content: end;
  gap: 2rem;
}

body:not([dark]) {
  .bxs-star {
    color: var(--ratingStar);
  }
}
[data-letters]:before {
  content: attr(data-letters);
  display: inline-block;
  /* font-size: 1em; */
  width: 3em;
  height: 3em;
  line-height: 3em;
  font-size: 16px;
  text-align: center;
  margin-right: 12px;
  border-radius: 50%;
  background: var(--primaryColor);
  vertical-align: middle;
  color: white;
}

.swiper-container {
  overflow-y: visible;
  overflow-x: hidden;
}
.swiper-slide {
  // border-radius: 0.25rem;
  --_col: var(--darkColor);
  box-shadow: inset 0px 0px 0px 1px var(--_col);
  -webkit-box-shadow: inset 0px 0px 0px 1px var(--_col);
  -moz-box-shadow: inset 0px 0px 0px 1px var(--_col);
  margin-bottom: 0.25rem;
  // padding-block: 0.25rem;
  [dark] & {
    --_col: var(--lightColor);
  }
}

.border-box {
  box-sizing: border-box;
}

.accordion-item {
  box-shadow: 0 4px 12px rgba(13, 9, 30, 0.125);
  background-color: #fff;
  padding: 1rem 2rem;
  border: 1px solid transparent;
  transition: border;
  [dark] & {
    background-color: var(--darkColor);
    border: 1px solid var(--lightColor);
  }
}

.accordion.accordion-custom .accordion-button {
  transition: all 0.25s;
  position: relative;
  overflow: hidden;
  // background-color: #fff;
  border-radius: 0.375rem;
  // box-shadow: 0 4px 12px rgba(13, 9, 30, 0.125);
  border: none;
  width: 100%;
  text-align: start;
  font-size: calc(1.3rem * var(--fontFactor));
  padding: 2rem;
  font-weight: 700;
  display: flex;
  justify-content: space-between;
  align-items: center;
  align-content: center;
  &::after {
    background-image: none;
    font-weight: 400;
    font-family: boxicons !important;
    transform: rotate(90deg);
    content: '';
    font-size: calc(0.875rem * var(--fontFactor));
    color: currentColor;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1rem;
    height: 1rem;
    text-align: center;
    line-height: 1;
    box-sizing: content-box;
    transition: transform 300ms;
  }
  &[aria-expanded='true']::after {
    transform: rotate(0deg);
  }
}

.accordion-collapse {
  display: grid;
  grid-template-rows: 0fr;
  transition: grid-template-rows 300ms;
  &.show {
    grid-template-rows: 1fr;
  }
  .accordion-body {
    overflow: hidden;
    font-size: 1.3rem;
    font-weight: 500;
    & > * {
      padding-inline: 2rem;
      padding-block-end: 2rem;
    }
  }
}
.footer-inner a:not(:hover) {
  transition: all 300ms;
}
.footer-inner a:not(:hover) {
  color: #6d655c;
  [dark] & {
    color: var(--lightColor);
  }
}

.footer-inner .social-links {
  text-align: right;
  padding-inline-start: 0;
  list-style-type: none;
  width: 100%;
  display: flex;
  gap: 1rem;
  justify-content: end;
  margin-block: calc(var(--sectionGap) / 2);
}

.footer-inner .menu-item a {
  position: relative;
  display: block;
}
.footer-inner .menu-item a::after {
  font-family: 'FontAwesome';
  content: '\f101';
  font-size: calc(12rem / 16 * var(--fontFactor));
  position: absolute;
  right: 15px;
  top: 6px;
  color: #d1d1d1;
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}

.footer-inner .menu-item:hover a::after {
  right: 6px;
}

.footer {
  font-size: calc(14rem / 16 * var(--fontFactor));
  line-height: 1.5;
  color: #777777;
  [dark] & {
    color: var(--lightColor);
  }
}

.wp-block-image.is-style-rounded img {
  border-radius: 200vmax;
}

.footerTopWrapper {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(4, 1fr);
  border-block: 1px solid var(--borderColor);
  padding-block: calc(var(--sectionGap) / 2);
  margin-block: calc(var(--sectionGap) / 2);
  @media screen and (max-width: $breakpoint) {
    grid-template-columns: 1fr;
  }
  ul {
    list-style: none;
  }
}
.footerBottomWrapper {
  > * > * {
    margin-block: calc(var(--sectionGap) / 2);
  }
}

.contactGrid {
  display: grid;
  grid-template-columns: 4fr 5fr;
  gap: 2rem;
  @media screen and (max-width: $breakpoint) {
    grid-template-columns: 1fr;
  }
  h2 {
    margin-block-end: 1rem;
    padding-block: 2rem;
    border-bottom: 1px solid var(--borderColor);
  }
  form {
    padding-block: 0.25rem;
    display: grid;
    gap: 1rem;
    input,
    textarea,
    select {
      color: var(--darkColor);
      [dark] & {
        color: var(--lightColor);
      }
      font-family: inherit;
      &::placeholder {
        color: var(--darkColor);
        [dark] & {
          color: var(--lightColor);
        }
      }
    }
  }
  button {
    width: fit-content;
  }
}
.align-items-center {
  align-items: center;
}
